<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <LangVersion>@DOTNET_LANG@</LangVersion>
    @DOTNET_TFM@
    <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <!-- 避免和 C++ 库重名 -->
    <AssemblyName>@DOTNET_PROJECT@.CSharp</AssemblyName>
    <Version>@PROJECT_VERSION@</Version>

    <!-- Nuget Properties -->
    <Description>.NET binding for CoralReefPlayer</Description>

    <!-- Pack Option -->
    <Title>@DOTNET_PROJECT@ v@PROJECT_VERSION@</Title>
    <PackageId>@DOTNET_PROJECT@</PackageId>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>

    <!-- Signing -->
    <SignAssembly>false</SignAssembly>
    <PublicSign>false</PublicSign>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <!-- Validate at least one runtime package has been generated -->
  <Target Name="ValidateRuntimePack" BeforeTargets="GenerateNuspec">
    <ItemGroup>
      <RuntimeLinux Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.linux-x64.*.nupkg"/>
      <RuntimeOsx Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.osx-x64.*.nupkg"/>
      <RuntimeWin Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.win-x64.*.nupkg"/>
    </ItemGroup>
    <Message Importance="high" Text="-------  $(OS)  "/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.win-x64: found" Condition="Exists('@(RuntimeWin)')"/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.win-x64: not found" Condition="!Exists('@(RuntimeWin)')"/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.osx-x64: found" Condition="Exists('@(RuntimeOsx)')"/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.osx-x64: not found" Condition="!Exists('@(RuntimeOsx)')"/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.linux-x64: found" Condition="Exists('@(RuntimeLinux)')"/>
    <Message Importance="high" Text="Package @DOTNET_PROJECT@.Runtime.linux-x64: not found" Condition="!Exists('@(RuntimeLinux)')"/>
    <Error Text="You must locally 'dotnet pack' at least one @DOTNET_PROJECT@.Runtime.{rid} Project." Condition="!Exists('@(RuntimeWin)') AND !Exists('@(RuntimeOsx)') AND !Exists('@(RuntimeLinux)')"/>
  </Target>

  <!-- Need to add required runtime dependencies so Meta-Project will pull runtime Nuget(s) -->
  <PropertyGroup>
    <RestoreSources>@CMAKE_INSTALL_PREFIX@;$(RestoreSources);https://api.nuget.org/v3/index.json</RestoreSources>
  </PropertyGroup>

  <ItemGroup>
    <RuntimeWin Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.win-x64.*.nupkg"/>
    <RuntimeOsx Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.osx-x64.*.nupkg"/>
    <RuntimeLinux Include="@CMAKE_INSTALL_PREFIX@/@DOTNET_PROJECT@.Runtime.linux-x64.*.nupkg"/>
    <PackageReference Include="@DOTNET_PROJECT@.Runtime.win-x64"   Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeWin)')"  />
    <PackageReference Include="@DOTNET_PROJECT@.Runtime.osx-x64"   Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeOsx)')"  />
    <PackageReference Include="@DOTNET_PROJECT@.Runtime.linux-x64" Version="@PROJECT_VERSION@" Condition="Exists('@(RuntimeLinux)')"/>
  </ItemGroup>
</Project>
